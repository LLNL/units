[build-system]
requires = ["scikit-build-core >=0.10", "nanobind >=2.4.0"]
build-backend = "scikit_build_core.build"

[project]
name = "units_llnl"
version = "0.10.0"
description = "Python bindings for the llnl units library"
readme = "./README.md"
requires-python = ">=3.10"
authors = [
    { name = "phlptp22", email = "top1@llnl.gov" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD-3-Clause",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/llnl/units"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "build-system.requires"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# The build targets to use when building the project. Empty builds the default
# target.
build.targets = ["units_llnl"]

# The components to install. If empty, all default components are installed.
install.components = ["units_llnl"]

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# ensure the python extension gets built
cmake.args = ["-DUNITS_BUILD_PYTHON_LIBRARY=ON", "-DUNITS_ENABLE_TESTS=OFF"]

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/python/tests"
test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
